---
- name: Make sure pihole directories is present
  become: True
  file:
    path: "{{ docker_compose_dir }}/{{ item }}"
    state: directory
    mode: "0755"
    owner: pi
    group: pi
  loop:
    - pihole
    - pihole/etc-dnsmasq.d
    - pihole/dhcp-helper
    - pihole/etc-pihole

- name: Copy compose source templates
  template:
    src: files/pihole/docker-compose.yml.j2
    dest: "{{ docker_compose_dir }}/pihole/docker-compose.yml"
    mode: 0600

- name: Tear down existing services
  community.general.docker_compose:
    project_src: "{{ docker_compose_dir }}/pihole"
    state: absent

- name: Copy Dockerfile
  copy:
    src: files/pihole/Dockerfile
    dest: "{{ docker_compose_dir }}/pihole/dhcp-helper"
    mode: 0600

- name: Copy piHole configuration files
  template:
    src: "{{ item }}"
    dest: "{{ docker_compose_dir }}/pihole/etc-pihole/{{ item | basename | regex_replace('\\.j2$', '') }}"
    mode: 0644
  with_fileglob:
    - pihole/conf/setupVars.conf.j2

- name: Copy DHCP configuration files
  template:
    src: "{{ item }}"
    dest: "{{ docker_compose_dir }}/pihole/etc-dnsmasq.d/{{ item | basename | regex_replace('\\.j2$', '') }}"
    mode: 0644
  with_fileglob:
    - pihole/conf/07-dhcp-options.conf.j2
    - pihole/conf/02-pihole-dhcp.conf.j2
    - pihole/conf/01-pihole.conf.j2

- name: Create and start services
  community.general.docker_compose:
    project_src: "{{ docker_compose_dir }}/pihole"
  register: output

- name: Debug output
  ansible.builtin.debug:
    var: output

- name: Run `docker-compose up` again
  community.general.docker_compose:
    project_src: "{{ docker_compose_dir }}/pihole"
    build: no
  register: output

- name: Debug output
  ansible.builtin.debug:
    var: output

- name: Confirm nothing chaged after subsequent run
  ansible.builtin.assert:
    that: "not output.changed"